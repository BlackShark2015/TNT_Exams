/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.ComplejidadController;
import Controller.MateriaController;
import Controller.TemaController;
import Controller.TipoPreguntaController;
import Model.Pregunta;
import java.io.IOException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Familia
 */
public final class frm_NewPregunta extends javax.swing.JFrame {
    private Pregunta prmodel; 
    private MateriaController matC;
    private TemaController temaC;
    private TipoPreguntaController tipoP;
    private ComplejidadController compC;
    
    public void inicializar() throws IOException, SQLException{
        this.matC = new MateriaController();
        DefaultComboBoxModel modelcbox = new DefaultComboBoxModel();
        modelcbox.addElement(new Item(1, "Seleccione..."));
        jcmbMateria.setModel(modelcbox);
        ResultSet rs = matC.ObtenerMateria();
            modelcbox.addElement(new Item((int) rs.getObject("IdMateria"), (String) rs.getObject("Nombre")));
            jcmbMateria.setModel(modelcbox);
            while (rs.next()) {
                modelcbox.addElement(new Item((int) rs.getObject("IdMateria"), (String) rs.getObject("Nombre")));
                jcmbMateria.setModel(modelcbox);
            }
    }
    /**
     * Creates new form frm_NewPregunta
     * @throws java.io.IOException
     * @throws java.sql.SQLException
     */
    public frm_NewPregunta() throws IOException, SQLException {
        initComponents();
        inicializar();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jcmbMateria = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jcmbTema = new javax.swing.JComboBox();
        jcmbTipoPregunta = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jcmbComplejidad = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jtxtPregunta = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtblPreguntas = new javax.swing.JTable();
        Btn_Add = new javax.swing.JButton();
        Btn_Guardar = new javax.swing.JButton();
        Btn_Remove = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        Parametri = new javax.swing.JMenu();
        CrearUsuario = new javax.swing.JMenuItem();
        CrearMateria = new javax.swing.JMenuItem();
        CrearTema = new javax.swing.JMenuItem();
        CrearPregunta = new javax.swing.JMenuItem();
        Exam = new javax.swing.JMenu();
        CrearExamen = new javax.swing.JMenuItem();
        ConsultarExamen = new javax.swing.JMenuItem();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Materia");

        jcmbMateria.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcmbMateriaItemStateChanged(evt);
            }
        });
        jcmbMateria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcmbMateriaActionPerformed(evt);
            }
        });
        jcmbMateria.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jcmbMateriaPropertyChange(evt);
            }
        });

        jLabel2.setText("Tema");

        jcmbTema.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcmbTemaActionPerformed(evt);
            }
        });

        jcmbTipoPregunta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcmbTipoPreguntaActionPerformed(evt);
            }
        });

        jLabel3.setText("Tipo Pregunta");

        jcmbComplejidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcmbComplejidadActionPerformed(evt);
            }
        });

        jLabel4.setText("Complejidad");

        jLabel5.setText("Pregunta :");

        jtblPreguntas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Materia", "Tema", "Tip. Pregunta", "Comp. Pregunta", "Pregunta"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jtblPreguntas);

        Btn_Add.setText("Add Pregunta");
        Btn_Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_AddActionPerformed(evt);
            }
        });

        Btn_Guardar.setLabel("Guardar");
        Btn_Guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_GuardarActionPerformed(evt);
            }
        });

        Btn_Remove.setText("Remover Pregunta");
        Btn_Remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_RemoveActionPerformed(evt);
            }
        });

        Parametri.setText("Parametrizacion");

        CrearUsuario.setText("Crear Usuario");
        CrearUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CrearUsuarioActionPerformed(evt);
            }
        });
        Parametri.add(CrearUsuario);

        CrearMateria.setText("Crear Materia");
        CrearMateria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CrearMateriaActionPerformed(evt);
            }
        });
        Parametri.add(CrearMateria);

        CrearTema.setText("Crear Tema");
        CrearTema.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CrearTemaActionPerformed(evt);
            }
        });
        Parametri.add(CrearTema);

        CrearPregunta.setText("Crear Pregunta");
        CrearPregunta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CrearPreguntaActionPerformed(evt);
            }
        });
        Parametri.add(CrearPregunta);

        jMenuBar1.add(Parametri);

        Exam.setText("Examen");

        CrearExamen.setText("Crear Examen");
        CrearExamen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CrearExamenActionPerformed(evt);
            }
        });
        Exam.add(CrearExamen);

        ConsultarExamen.setText("Consultar Examen");
        ConsultarExamen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConsultarExamenActionPerformed(evt);
            }
        });
        Exam.add(ConsultarExamen);

        jMenuBar1.add(Exam);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jcmbMateria, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jcmbTema, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jcmbTipoPregunta, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jcmbComplejidad, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(10, 10, 10))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(71, 71, 71)
                                        .addComponent(Btn_Add)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(Btn_Remove))
                                    .addComponent(jtxtPregunta)))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Btn_Guardar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jcmbMateria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jcmbTema, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jcmbTipoPregunta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jcmbComplejidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtxtPregunta, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Btn_Add)
                    .addComponent(Btn_Remove))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Btn_Guardar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jcmbComplejidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcmbComplejidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcmbComplejidadActionPerformed

    private void CrearUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CrearUsuarioActionPerformed
        frm_NewUsuario pc = null;
        try {
            pc = new frm_NewUsuario();
        } catch (IOException ex) {
            Logger.getLogger(frm_NewPregunta.class.getName()).log(Level.SEVERE, null, ex);
        }
        pc.setVisible(true);
        dispose();
    }//GEN-LAST:event_CrearUsuarioActionPerformed

    private void CrearMateriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CrearMateriaActionPerformed
        try {
            frm_NewMateria pc = new frm_NewMateria();
            pc.setVisible(true);
            dispose();
        } catch (IOException ex) {
            Logger.getLogger(frm_NewPregunta.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_CrearMateriaActionPerformed

    private void CrearTemaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CrearTemaActionPerformed
        try {
            frm_NewTema pc = new frm_NewTema();
            pc.setVisible(true);
            dispose();
        } catch (IOException ex) {
            Logger.getLogger(frm_NewPregunta.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(frm_NewPregunta.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_CrearTemaActionPerformed

    private void CrearPreguntaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CrearPreguntaActionPerformed
        frm_NewPregunta pc = null;
        try {
            pc = new frm_NewPregunta();
        } catch (IOException ex) {
            Logger.getLogger(frm_NewPregunta.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(frm_NewPregunta.class.getName()).log(Level.SEVERE, null, ex);
        }
        pc.setVisible(true);
        dispose();
    }//GEN-LAST:event_CrearPreguntaActionPerformed

    private void CrearExamenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CrearExamenActionPerformed
        frm_NewExamen pc = new frm_NewExamen();
        pc.setVisible(true);
        dispose();
    }//GEN-LAST:event_CrearExamenActionPerformed

    private void ConsultarExamenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConsultarExamenActionPerformed
        frm_Consultar pc = new frm_Consultar();
        pc.setVisible(true);
        dispose();
    }//GEN-LAST:event_ConsultarExamenActionPerformed

    private void jcmbMateriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcmbMateriaActionPerformed
        try {
            this.temaC = new TemaController();

            DefaultComboBoxModel modelcbox = new DefaultComboBoxModel();
            modelcbox.addElement(new Item(1, "Seleccione..."));
            jcmbTema.setModel(modelcbox);
            
            Object item1 = jcmbMateria.getSelectedItem();
            int value = ((Item)jcmbMateria.getSelectedItem()).getId();
            
            ResultSet rs = temaC.ObtenerTema(((Item)jcmbMateria.getSelectedItem()).getId());
            modelcbox.addElement(new Item((int) rs.getObject("IdTema"), (String) rs.getObject("Nombre")));
            jcmbTema.setModel(modelcbox);
            while (rs.next()) {
                modelcbox.addElement(new Item((int) rs.getObject("IdTema"), (String) rs.getObject("Nombre")));
                jcmbTema.setModel(modelcbox);
            }
        } catch (IOException | SQLException ex) {
            Logger.getLogger(frm_NewPregunta.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jcmbMateriaActionPerformed

    private void jcmbTemaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcmbTemaActionPerformed
        try {
            this.tipoP = new TipoPreguntaController();

            DefaultComboBoxModel modelcbox = new DefaultComboBoxModel();
            modelcbox.addElement(new Item(1, "Seleccione..."));
            jcmbTipoPregunta.setModel(modelcbox);
            
            Object item1 = jcmbTipoPregunta.getSelectedItem();
            int value = ((Item)jcmbTipoPregunta.getSelectedItem()).getId();
            
            ResultSet rs = tipoP.ObtenerTipoPregunta();
            modelcbox.addElement(new Item((int) rs.getObject("idTipoPreguntas"), (String) rs.getObject("Nombre")));
            jcmbTipoPregunta.setModel(modelcbox);
            while (rs.next()) {
                modelcbox.addElement(new Item((int) rs.getObject("idTipoPreguntas"), (String) rs.getObject("Nombre")));
                jcmbTipoPregunta.setModel(modelcbox);
            }
        } catch (IOException | SQLException ex) {
            Logger.getLogger(frm_NewPregunta.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jcmbTemaActionPerformed

    private void jcmbMateriaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcmbMateriaItemStateChanged
        
    }//GEN-LAST:event_jcmbMateriaItemStateChanged

    private void jcmbMateriaPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jcmbMateriaPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_jcmbMateriaPropertyChange

    private void jcmbTipoPreguntaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcmbTipoPreguntaActionPerformed
        try {
            this.compC = new ComplejidadController();

            DefaultComboBoxModel modelcbox = new DefaultComboBoxModel();
            modelcbox.addElement(new Item(1, "Seleccione..."));
            jcmbComplejidad.setModel(modelcbox);
            
            Object item1 = jcmbComplejidad.getSelectedItem();
            int value = ((Item)jcmbComplejidad.getSelectedItem()).getId();
            
            ResultSet rs = compC.ConsultarComplejidad();
            modelcbox.addElement(new Item((int) rs.getObject("idComplejidad"), (String) rs.getObject("Nombre")));
            jcmbComplejidad.setModel(modelcbox);
            while (rs.next()) {
                modelcbox.addElement(new Item((int) rs.getObject("idComplejidad"), (String) rs.getObject("Nombre")));
                jcmbComplejidad.setModel(modelcbox);
            }
        } catch (IOException | SQLException ex) {
            Logger.getLogger(frm_NewPregunta.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jcmbTipoPreguntaActionPerformed

    private void Btn_AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_AddActionPerformed
        //Por medio de un vector se agrega una fila nueva al modelo
        //Primero extraemos el modelo y lo asignamos a una variable de tipo Table Model
        DefaultTableModel model = (DefaultTableModel) jtblPreguntas.getModel();
        
        //Creamos el vector (fila) y agregamos todos los campos requeridos para el modelo
        Vector row = new Vector();
        row.add(((Item)jcmbMateria.getSelectedItem()).getName());
        row.add(((Item)jcmbTema.getSelectedItem()).getName());
        row.add(((Item)jcmbTipoPregunta.getSelectedItem()).getName());
        row.add(((Item)jcmbComplejidad.getSelectedItem()).getName());
        row.add(jtxtPregunta.getText());
        
        //Finalmente agregamos el vector a la tabla
        model.addRow(row);
    }//GEN-LAST:event_Btn_AddActionPerformed
ArrayList<String> full_datos = new ArrayList<String>();  //  @jve:decl-index=0:
	
    private void Btn_GuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_GuardarActionPerformed
        Vector datosGuardar=new Vector(1);	
        DefaultTableModel model = (DefaultTableModel) jtblPreguntas.getModel();
        Pregunta preg = null;
        if(jtblPreguntas.getRowCount() > 0){
            for (int i = 0; i < jtblPreguntas.getRowCount(); i++) //recorro las filas
            {
                /*for (int a = 0; a < jtblPreguntas.getColumnCount(); a++) //recorro las columnas
                {
                    full_datos.add(model.getValueAt(i, a).toString());
                    datosGuardar.addElement(model.getValueAt(i, a).toString());
                }*/
                
                try {
                    int s = temaC.ObtenerTema(model.getValueAt(i, 1).toString());
                    prmodel.setIdTema(s);
                    prmodel.setIdTipoPregunta(tipoP.ObtenerTipoPregunta(model.getValueAt(i, 2).toString()));
                    prmodel.setIdComplegidad(compC.ObtenerComplegidad(model.getValueAt(i, 3).toString()));
                    prmodel.setPregunta(model.getValueAt(i, 4).toString());
                    prmodel.crear();
                    
                } catch (SQLException ex) {
                    Logger.getLogger(frm_NewPregunta.class.getName()).log(Level.SEVERE, null, ex);
                }
                prmodel.crear(datosGuardar);
            }
        } else {
            JOptionPane.showMessageDialog(this, "No existen preguntas a agregar en la base de datos.");
        }
    }//GEN-LAST:event_Btn_GuardarActionPerformed

    private void Btn_RemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_RemoveActionPerformed
        // TODO add your handling code here:
        //Se valida que exista una fila seleccionada en la tabla
        if(jtblPreguntas.getSelectedRow() >=0){
            //se carga el modelo de la tabla en una variable teble model
                DefaultTableModel model = (DefaultTableModel)jtblPreguntas.getModel();
            //se elimina el elemento seleccionado
                model.removeRow(jtblPreguntas.getSelectedRow());
        } else {
            //en caso de que se de clic en el boton remover y no tengan una fila seleccionada, se arroja una alerta
                JOptionPane.showMessageDialog(Btn_Remove, "Seleccione al menos un item a remover.");
        }
    }//GEN-LAST:event_Btn_RemoveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frm_NewPregunta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frm_NewPregunta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frm_NewPregunta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frm_NewPregunta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new frm_NewPregunta().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(frm_NewPregunta.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(frm_NewPregunta.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Btn_Add;
    private javax.swing.JButton Btn_Guardar;
    private javax.swing.JButton Btn_Remove;
    private javax.swing.JMenuItem ConsultarExamen;
    private javax.swing.JMenuItem CrearExamen;
    private javax.swing.JMenuItem CrearMateria;
    private javax.swing.JMenuItem CrearPregunta;
    private javax.swing.JMenuItem CrearTema;
    private javax.swing.JMenuItem CrearUsuario;
    private javax.swing.JMenu Exam;
    private javax.swing.JMenu Parametri;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JComboBox jcmbComplejidad;
    private javax.swing.JComboBox jcmbMateria;
    private javax.swing.JComboBox jcmbTema;
    private javax.swing.JComboBox jcmbTipoPregunta;
    private javax.swing.JTable jtblPreguntas;
    private javax.swing.JTextField jtxtPregunta;
    // End of variables declaration//GEN-END:variables
}
